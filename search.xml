<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2017%2F07%2F07%2F%E5%85%B3%E4%BA%8E%E6%80%8E%E4%B9%88%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%8A%8Avue%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0github%E5%B9%B6%E5%88%A9%E7%94%A8github-page%E8%BF%9B%E8%A1%8C%E5%9C%A8%E7%BA%BF%E6%BC%94%E7%A4%BA%E8%87%AA%E5%B7%B1%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[title: 关于怎么一步步把vue项目发布到github并利用github-pages进行在线演示自己项目的记录categories: vuetags: github webpack vue github pages 第一次把自己做的项目利用github pages 进行展示，查阅了相关资料，文档终于搞定了。。。前提是已经有自己的github静态博客的情况。 vue项目npm run dev 已经可以成功运行的情况下 利用npm run build对项目进行编译前需要做 1.查看 .gitignore文件，看是否存在dist/ ，存在需要删除，这样后面build 才会成功 2.进入config文件里面找到index.js文件，把build里面的assetsPublicPath:更改为‘./ ‘ 完成上面两步奏，就可以开始编译打包项目啦.npm run build 打包完会在项目中生成一个dist文件，这个文件就是上线需要的文件，里面有css文件/js文件/index.html，这个时候用浏览器打开dist里面的index.html文件便可以展示出你项目的效果 接下来就是发布到远程github上。 在你之前有提交过github的情况下，只要依次运行git add **.** git commit -m &quot;描述你所做的操作&quot; git push -u origin master 即可。如果没有提交过github情况，可以先查看相关文档，看如何提交。 接下来就是利用github page 了，经过查阅，最方便的方法就是运行完前面的操作之后，执行下面这条命令即可: git subtree push --prefix=dist origin gh-pages 意思是把指定的dist文件提交到gh-pages分支上，等待。刷新github 去到项目里面点开Settings，下拉看到github pages里面多了一个链接，这个链接就是你展示demo的链接啦。 . 参考链接 https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/ http://blog.csdn.net/osdfhv/article/details/60968274 https://segmentfault.com/q/1010000007913675?_ea=1490992 我的demo链接 http://cosmoslmj.com/Toutiao-Vue2.0/ http://cosmoslmj.com/Youkuvue2.0/#/]]></content>
  </entry>
  <entry>
    <title><![CDATA[偶遇第一波电话面试的内容]]></title>
    <url>%2F2017%2F06%2F17%2F%E5%81%B6%E9%81%87%E7%AC%AC%E4%B8%80%E6%B3%A2%E7%94%B5%E8%AF%9D%E9%9D%A2%E8%AF%95%E7%9A%84%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[1.你知道IE盒子模型和W3c盒子模型的区别吗？标准的w3c盒子模型：包括的范围有: margin border padding content content不包括其他部分 IE盒子模型：包括的范围也是: margin border padding content content包括了border 和 padding 两者不同点就在W3C盒模型中，元素的宽(width) 高(height)仅仅指的是 content 区域 ，而IE盒子模型中，元素的宽(width) 高(height) 属性是由 content区域 + padding + border组成 所以W3c盒模型(标准模型)元素的总宽高： width = width + left padding + right padding + left border +right border + left margin + right margin height = heifht + top padding + bottom padding + top border + bottom border + top margin + bottom margin IE盒模型元素的总宽高： width = left margin + width + right marginheight = top margin + height + bottom margin ie 6之前都是采用IE盒模型，从IE6之后开始提供一种IE使用的W3C盒模型方式： 在html中声明Doctype但是IE6默认仍是IE盒子模型(quirks model模式) CSS3中 content-box 和 boeder-box 这两个属性就是用来规定使用哪种盒模型 1box-sizing: content-box || border-box || inherit 如果设置属性值是content-box，采用的是标准盒模型如果设置属性值是border-box，采用的是怪异模式下的IE盒模型如果设置属性值inherit，采用继承方式 实际中运用场景：比如一个div容器设置了具体700px的宽度，div里面有两个子div，分别100px,600px,都设置左浮动。结果因为宽度刚好满足，两个子div会水平排列在div容器中。 顾客新需求：给子div添加border 此时，因为默认状态下是采用标准模式，两div都设置了border，他们实际的宽等于width + left border + right border ，就会超过父容器，此时会导致换行 解决办法： 给子div加上box-sizing: border-box (ie8开始支持) 2.如何做到垂直水平居中首先先了解CSS布局(layout)分为以下几块内容： 盒子内部的布局 文本布局(text) 盒模型本身的布局(box) 盒子与盒子之间的布局(visual formatting) 脱离文档流(正常流normol flow)的盒子布局 float(浮动)上下文下的布局 absolute(绝对定位)上下文下的布局 处于正常文档流(normol flow)的盒子布局 BFC(Block Formatting Context块级格式化上下文)布局 IFC(Inline Formatting Contexts行内(内联)格式化上下文中)布局 FFC(Flex Formatting Contexts自适应格式化上下文)布局 table上下文布局 css grid上下文布局 (GFC) 当问到如何关于CSS布局，做到垂直水平居中的时候需要从上面涉及到的CSS布局模块来考虑。 1.文本居中的方式：height 和line height 相等 text-align:center html: 123&lt;div class="container"&gt;&lt;span&gt;我可以水平居中&lt;/span&gt;&lt;/div&gt; css: 123456789101112131415161718192021* &#123;margin: 0;padding: 0&#125;.container &#123; height: 500px; line-height: 500px; text-align: center; background-color: #f00; font-size: 40px;&#125;或者.container &#123; height: 500px; display:table-cell; text-align: center; background-color: #f00; vertical-align: middle;&#125; 第一个没写宽度会宽度100%显示，文字位于中间，第二个文字宽度就是显示的宽度优点： 适合所有浏览 缺点： 只适合行内元素单行文本水平垂直居中。比如按钮中的文字 器 2. 利用盒模型的水平垂直居中块级盒(block-level box)里面包含：content-box padding-box border-box margin-box 里面的盒子位于外面盒子水平垂直居中padding html: 123&lt;div class="container"&gt; &lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt; css: 12345678910111213141516171819* &#123;margin: 0;padding: 0&#125;.container&#123; margin-left: auto; margin-right: auto; margin-top: 100px; width: 400px; height: 400px; background-color: #f00;&#125;.box&#123; width: 100px; height: 100px; padding: 150px; background-color: #f1f1f1; background-clip:content-box;&#125; 主要是 padding = (container.width - box.width)/2 margin html: 123&lt;div class="container"&gt; &lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt; css 1234567891011121314151617 * &#123; margin: 0; padding: 0; &#125;.container&#123; overflow: hidden; width: 100%; height: 500px; background-color: #f00;&#125;.box&#123; margin-left: auto; margin-right: auto; width:100px; height:100px; margin-top:200px; background-color: #f1f1f1; 主要 margin-top = (container.height - box.height)/2 需要知道元素的宽度。 3.块状元素水平居中 html: 123&lt;div class='container'&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt;&lt;/div&gt; css 12345678910111213 * &#123; margin: 0; padding: 0; &#125;.container&#123; height: 500px; background-color: #f00;&#125;.box&#123; margin: 0 auto; width:100px; height:100px; background-color: #f1f1f1; 4.多个块元素水平居中 法一： margin : 0 auto html12345&lt;div class='container'&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt;&lt;/div&gt; css 12345678910111213 * &#123; margin: 0; padding: 0; &#125;.container&#123; height: 500px; text-align: center;&#125;.box&#123; display: inline-block; width:100px; height:100px; background-color: #f1f1f1; 法二： 使用flexbox flex是css3的一个新布局 设置某元素是flexbox布局，只需要设置它的display：flexflexbox默认是块级元素，如果定义为行内级元素设置display: inline-flex 设置display的属性得到一个伸缩容器，因为flexbox由伸缩容器和伸缩项目组成。每一个被设置为flex的元素，它的内部元素都将变成一个flex伸缩项目。 html12345&lt;div class='container'&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt;&lt;/div&gt; css 1234567891011121314151617 * &#123; margin: 0; padding: 0; &#125;.container&#123; height: 500px; background-color:#f2f2f2; display:flex;&#125;.box&#123; margin:auto;//盒子间距 width:100px; height:100px; display:flex;//让我是居中的盒子这几个字居中 align-items: center; justify-content: center; background-color: #f1f1f1; 5. 已知需要被垂直居中高度宽度的元素做水平垂直居中 利用绝对定位absolute和负边距实现 html: 123&lt;div class='container'&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt;&lt;/div&gt; css: 123456789101112131415161718* &#123; margin: 0; padding: 0; &#125;.container&#123; position: relative; width: 500px; height: 600px; background-color: #f00;&#125;.box&#123; width:100px; height:100px; position: absolute; top:50%; left: 50%; margin:-50px 0 0 -50px; background-color: #f1f1f1; 如果container没有设置相对定位relative box会位于浏览器中间。 利用absolute和margin实现 html: 123&lt;div class='container'&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt;&lt;/div&gt; css: 1234567891011121314151617181920 * &#123; margin: 0; padding: 0; &#125;.container&#123; position: relative; width: 500px; height: 500px; background-color: #f00;&#125;.box&#123; position: absolute; margin:auto; top:0; bottom: 0; left: 0; right: 0; width: 30px; height: 30px; background-color: #f1f1f1; 6.利用CSS3的transform，在位置元素的高宽下实现元素垂直居中 html: 123&lt;div class='container'&gt; &lt;div class = 'box'&gt;#我是居中的盒子&lt;/div&gt;&lt;/div&gt; css: 1234567891011121314151617 * &#123; margin: 0; padding: 0; &#125;.container&#123; position: relative; height: 500px; background-color: #f00;&#125;.box&#123; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 30px; height: 30px; background-color: #f1f1f1; 注意使用CSS3的flex和transform的时候需要考虑兼容问题。如需要加上-webkit-flex 3.position有哪些属性？这些属性哪一个不位于文档流？如果一个元素设置了absolute，它是以谁为参考点？所谓的文档流，指的是元素排版布局过程中，元素会自动从左往右，从上往下的流式排列。并最终窗体自上而下分成一行行,并在每行中按从左至右的顺序排放元素。 脱离文档流：元素打乱了排列position的属性有：absolute relative normal fixed static absolute fixed 会将元素从排版中拿走而脱离文档流。当然除了这个，给元素设置float也会脱离文档流 absolute:以最近具有定位属性(position)的父元素为基准进行定位，脱离标准文档流,如果绝对定位（position属性的值为absolute）的元素没有“positioned”祖先元素，或者 position:static 那么它是相对于文档的 body 元素，并且它会随着页面滚动而移动 fixed：以html为基准相对于视窗来定位,即便页面滚动，它还是会停留在相同的位置relative:相对原有的位置进行偏移，仍然处在文档流当中 4.你听过CSS的BRM规范么？说说看？因为css命名不规范会在后期修改的时候带来很多问题。优势：看class名字就知道该功能是做什么，了解各模块间的关系 BEM规范：块(block)、元素(element)、修饰符(modifier)的缩写。利用不同的区块，功能与样式给元素命名。这三部分使用__ 与–连接。 命名规则如下： .block{} 代表更高级的抽象或组件 .block__elment{} 代表block的后代 .block–modifier{} 代表不同状态或者不同版本 例如具体的： .menu{}.menuitem{}.menu–disabled{}.menuitem–disable{}.menu__item–first–disable{} 很容易看出：顶级块是menu,它有一些元素item,item又有一些特性first ，first又有一些特性disable 5.你听过圣杯布局和双飞翼布局吗？说说看两者都是实现三栏布局。其中两边盒子固定，中间自适应。(固比固布局)圣杯布局来自一篇文章：In Search of the Holy Grail (https://alistapart.com/article/holygrail) 双飞翼布局源于：淘宝UED页面渲染 html: 12345678910111213141516171819&lt;header&gt;&lt;p&gt;Header内容区&lt;/p&gt;&lt;/header&gt;&lt;div class="container"&gt;&lt;div class="middle"&gt;&lt;p&gt;中间弹性区先渲染设置宽度自适应100% ggggggggggggggggggggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&lt;/p&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;p&gt;左边栏本来会掉下去，如果设置margin-left:-100% 负中间盒子的宽度往最左靠&lt;/p&gt;&lt;/div&gt;&lt;div class="right"&gt;&lt;p&gt;右边栏 本来也是掉下去，如果设置为负的自己的宽度，会在右边显示出来 margin-left:-200px&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;footer class="footer"&gt;&lt;p&gt;Footer内容区&lt;/p&gt;&lt;/footer&gt; css 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748 * &#123; margin: 0; padding: 0; &#125; body &#123; min-width: 900px; &#125;header &#123; width: 100%; height: 40px; background-color: red;&#125;.container &#123; height:200px; overflow:hidden; padding: 0 200px;&#125;.middle &#123; width: 100%; height: 200px; background-color: yellow; float:left; &#125;.left &#123; position: relative; left: -200px; width: 200px; height: 200px; background-color: blue; float:left; margin-left:-100%; color:#fff;&#125;.right &#123; position: relative; right:-200px; width: 200px; height: 200px; background-color: green; float:left; margin-left:-200px;&#125;.footer &#123; width: 100%; height: 30px; color: #f00; background-color: black;&#125; 双飞翼布局：在middle里面加多一个div 给这个div设置margin-left:左盒子宽度 margin-right:右盒子宽度，然后.container的padding .left .right里面的相对位置，和left right都不用 html: 12345678910111213141516171819202122&lt;header&gt;&lt;p&gt;Header内容区&lt;/p&gt;&lt;/header&gt;&lt;div class="container"&gt;&lt;div class="middle"&gt;&lt;div class="middle-in"&gt; &lt;p&gt;中间弹性区先渲染设置宽度自适应100% gggggggggggggggggggggggggggggggggggggggffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;p&gt;左边栏本来会掉下去，如果设置margin-left:-100% 负中间盒子的宽度往最左靠&lt;/p&gt;&lt;/div&gt;&lt;div class="right"&gt;&lt;p&gt;右边栏 本来也是掉下去，如果设置为负的自己的宽度，会在右边显示出来 margin-left:-200px&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;footer class="footer"&gt;&lt;p&gt;Footer内容区&lt;/p&gt;&lt;/footer&gt; css 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748 * &#123; margin: 0; padding: 0; &#125;body &#123; min-width: 900px; &#125;header &#123; width: 100%; height: 40px; background-color: red;&#125;.container &#123; height:200px; overflow:hidden; &#125;.middle &#123; width: 100%; height: 200px; background-color: yellow; float:left; &#125;.middle-in &#123; margin-left: 200px; margin-right: 200px; &#125;.left &#123; width: 200px; height: 200px; background-color: blue; float:left; margin-left:-100%; color:#fff;&#125;.right &#123; width: 200px; height: 200px; background-color: green; float:left; margin-left:-200px;&#125;.footer &#123; width: 100%; height: 30px; color: #f00; background-color: black;&#125; 对比：双飞翼布局比圣杯布局，中间盒子多加一个div，但不用进行相对布局与设置对应的left,right值 6.setInterval setTimeout运行机制，平常用它写过什么？ 参考文档链接：(http://div.io/topic/1155)(https://juejin.im/entry/58e605d80ce46300584a1afb)(http://www.cnblogs.com/coco1s/p/4444383.html)(http://zh.learnlayout.com/position.html)]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[说说学习javascript做过的那些小例子]]></title>
    <url>%2F2017%2F06%2F09%2F%E8%AF%B4%E8%AF%B4%E5%AD%A6%E4%B9%A0javascript%E5%81%9A%E8%BF%87%E7%9A%84%E9%82%A3%E4%BA%9B%E5%B0%8F%E4%BE%8B%E5%AD%90%2F</url>
    <content type="text"><![CDATA[1.给定一个随机数字组成的数组，选取其中的偶数，并排序， 返回新数组；定义一个随机数组var arr = []; for(var i = 0; i &lt; 50; i++) { arr[i] = parseInt(Math.random()*50); } var cl = arr.join(&apos;,&apos;); document.write(&apos;给定一个随机数字组成的数组&apos;+&quot;[&quot;+cl+&quot;]&quot;+&quot;&lt;br&gt;&quot;); 判断数组中偶数var arr2 = []; for(var i = 0; i &lt; arr.length; i++) { if(arr[i] % 2 === 0) { arr2.push(arr[i]); } } 给这些偶数升序排序arr2.sort(function sortNumber(a,b) { return a-b; }) document.write(&quot;选出上面数组的偶数并将其升序排序后这个新数组是&quot;+&quot;[&quot;+arr2+&quot;]&quot;+&quot;&lt;br&gt;&quot;); 给这些偶数升序排序后去重function find() { var arr3 = []; for(var i = 0; i &lt; arr2.length; i++) { if(arr3.indexOf(arr2[i]) &lt; 0) { arr3.push(arr2[i]); } } document.write(&quot;给上面的数组去重后新数组是&quot;+&quot;[&quot;+arr3+&quot;]&quot;+&quot;&lt;br&gt;&quot;); } find(arr2); 给这些偶数降序排序var arr4 = []; for(var i = 0; i &lt; arr.length; i++) { if(arr[i] % 2 === 0) { arr4.push(arr[i]); } } arr4.sort(function sortNumber(a,b) { return b-a; }); document.write(&quot;选出上面数组的偶数并将其降序排序后这个新数组是&quot;+&quot;[&quot;+arr4+&quot;]&quot;+&quot;&lt;br&gt;&quot;); 总结1： 随机数：parseInt(Math).random() —&gt;范围是0-1的整数， parseInt(Math).random()*50—&gt;范围是0-50的整数 arr.join(‘,’) 把数组内的数用‘,’连接 arr2.push(arr[i]) 遍历arr把arr的内容放到arr2中 数组升序与降序方法： arr.sort(function sortNumber(a,b)) { return a - b ;}) a-b是升序 b-a是降序 去重 arr3.indexOf(arr2[i] &lt; 0) 2.给定一个随机数字组成的数组，选取其中最大的奇数，并返回这个奇数；随机定义一个数组var odd = []; for(var i = 0; i &lt; 20; i++) { odd[i] = parseInt(Math.random()*100); } var a = odd.join(&apos;,&apos;); document.write(&apos;给定一个随机数字组成的数组&apos;+&quot;[&quot;+a+&quot;]&quot;+&quot;&lt;br&gt;&quot;); 选取数组中的奇数var odd2 = []; for(i = 0; i &lt; odd.length; i++) { if(odd[i] % 2 != 0) { odd2.push(odd[i]); } } document.write(&apos;数组中的所有奇数&apos;+&quot;[&quot;+odd2+&quot;]&quot;+&quot;&lt;br&gt;&quot;); 3.选取数组中最大的奇数var max = 0; for(i = 0;i &lt; odd2.length; i++) { if(odd2[i] &gt; max) { max = odd2[i]; } } document.write(&apos;上面数组所有奇数中最大的奇数为&apos;+max+&quot;&lt;br&gt;&quot;); 整合代码如下： function oddMax() { var odd = []; for(var i = 0; i &lt; 20; i++) { odd[i] = parseInt(Math.random()*100); document.write(&apos;给定一个随机数字组成的数组&apos;+&quot;[&quot;+odd[i]+&quot;]&quot;+&quot;&lt;br&gt;&quot;); } var odd2 = []; for(i = 0; i &lt; odd.length; i++) { if(odd[i] % 2 != 0) { odd2.push(odd[i]); } } var max = 0; for(i = 0;i &lt; odd2.length; i++) { if(odd2[i] &gt; max) { max = odd2[i]; } } return max; } oddMax(); 总结2： 随机数 选取数组中的奇数 数组内数与数的比较 3.给定一个字符串，统计其中某个字符的个数。并且全部用另一个字符替换，返回替换后的字符串如‘abcdfasdfjkflkwerkjdskfjskdjflklasdfldf’; ，统计 字符d 的个数，并将其中的 d 用s全部替换 function matchStr(str) { var reg =/d/g; var len= str.match(reg).length; console.log(&apos;d出现的个数是&apos; + len); return str.replace(/d/g,&quot;s&quot;); } a = &apos;abcdfasdfjkflkwerkjdskfjskdjflklasdfldf&apos;; matchStr(a); 总结3： 正则表达式匹配 4.如何随机色用#······表示 function getCl() { var arr = []; var C = &apos;0123456789ABCDEF&apos;; for(var i = 0; i &lt; 6; i++) { var x = parseInt(Math.random() * 16); var c = C.substr(x,1); arr.push(c); } var cl = &quot;#&quot; + arr.join(&apos;&apos;); return cl; } getCl(); 用rgba(,,,)表示function Color() { this.r = Math.floor(Math.random()*255); this.g = Math.floor(Math.random()*255); this.b = Math.floor(Math.random()*255); this.color = &apos;rgba(&apos;+ this.r +&apos;,&apos;+ this.g +&apos;,&apos;+ this.b +&apos;,0.5)&apos;; return this.color; } Color(); 总结4: 颜色范围：0-9 A-F C.substr(x,1) 表示在C中选出下标是X的1个数 用rgba表示 颜色范围是0-255 rgba(209m103,56,.5);后面的.5表示透明度 是0.5，一般都省略0]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Html5的那些事《二》]]></title>
    <url>%2F2017%2F06%2F07%2F%E5%85%B3%E4%BA%8EHtml5%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E3%80%8A%E4%BA%8C%E3%80%8B%2F</url>
    <content type="text"><![CDATA[Html5 新的Input类型 type email 应包含e - mail 地址的输入域，提交表单时候会自动验证email域的值 url 应包含URL地址的输入域，··· number 应包含数值的输入域，可以设置数字限定 min=”1” max=”10” step=”3” 数字间隔（0，3，6），可以规定默认值value range 应包含一定范围内的数字值的输入域，显示是滚动条 也可以设置和number一样的属性 Date picker(date（同时选日/月/年）,month（同时选月/年）,week（同时选周/年）,time（同时选小时/分钟）,datetime（时间 日 月 年（UTC时间））,datetime-local （时间 日 月 年（本地时间））) 日期选择器 search 搜索域，比如站点搜索或 Google 搜索。 显示为常规的文本域 color Html5表单元素 datalist 规定输入域的选项列表 value值必须设置 12345 &lt;datalist id="url_list"&gt;&lt;option label="W3School" value="http://www.W3School.com.cn" /&gt;&lt;option label="Google" value="http://www.google.com" /&gt;&lt;option label="Microsoft" value="http://www.microsoft.com" /&gt;&lt;/datalist&gt; keygen 提供一种验证用户的可靠方法 元素是密钥对生成器（key-pair generator）。当提交表单时，会生成两个键，一个是私钥，一个公钥。私钥（private key）存储于客户端，公钥（public key）则被发送到服务器。公钥可用于之后验证用户的客户端证书（client certificate）。但是目前浏览器支持度不高 output 元素用于不同类型的输出，比如计算或脚本输出 1&lt;output id="result" onforminput="resCalc()"&gt;&lt;/output&gt; Html5的新的表单属性 新的form属性： autocomplete novalidate 新的input属性： autocompleteautofocusformform overrides (formaction, formenctype, formmethod, formnovalidate, formtarget)height 和 width 1&lt;input type="image" src="img_submit.gif" width="99" height="99" /&gt; list list 属性适用于以下类型的 input 标签：text, search, url, telephone, email, date pickers, number, range 以及 color min, max 和 stepmultiplepattern (regexp)placeholderrequired W3C关于html5测试错题： HTML5之前的版本是：HTML4.01 HTML5中不再支持script元素中的type属性 在HTML5中，contextmenu和spellcheck是 html 属性 getContext 是HTML5内建对象用于在画布上绘制 range输入类型定义滑块控件 meter是HTML5元素显示已知范围内的标量测量 资源链接：(http://www.w3school.com.cn/quiz/quiz.asp?quiz=html5)]]></content>
      <categories>
        <category>html5</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>w3c</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Html5的那些事《一》]]></title>
    <url>%2F2017%2F06%2F07%2F%E5%85%B3%E4%BA%8EHtml5%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[video video元素可以放多个source元素，浏览器会识别第一个有效的视频文件地址 video可以通过Dom操作进行设置相应的播放、暂停、t停止、宽度调节等。主要通过play() / pause() load() paused / width function playPause(){if (myVideo.paused) myVideo.play();else myVideo.pause();} function makeBig(){myVideo.width=560;} 所有属性中只有videoWidth videoHeight属性是立即可用的。其他属性都要等视频的元数据已加载完成后才可以用。 video 支持3种视频格式 ：Ogg MPEG 4 WebM audio audio元素支持3种音频格式：Ogg Vorbis MP3 Wav Html5拖放 拖放（Drag drop）是html5标准的组成部分，任何元素都可以拖放 9以上IE，并且设置元素属性draggable=”true” Canvas 使用javascript 在网页上绘制图像，矩形区域 ，可以控制它的每一个像素，拥有多种绘制路径、矩形、圆形、字符和添加图像的方法 创建Canvas的步骤： 添加canvas元素 1&lt;canvas id="myCanvas" width="200" height="100"&gt;&lt;/canvas&gt; 通过JS绘制，因为canvas元素本身没有绘制能力绘制形状内容： 12345678910&lt;script&gt;//获取IDvar c = document.getElementById("myCanvas");//创建context对象var cxt = c.getContext("2d"');//绘制红色cxt.fillStyle = "#FF0000";//绘制 150*75 的矩形 从左上角 (0,0)开始cxt.fillRect(0,0,150,75);&lt;/script&gt; 绘制线条： 123456var c=document.getElementById("myCanvas");var cxt=c.getContext("2d");cxt.moveTo(0,0);cxt.lineTo(100,50);cxt.lineTo(1,50);cxt.stroke(); ![上面代码解析][/source/img/1.png] 绘制一个圆 1234567var c=document.getElementById("myCanvas");var cxt=c.getContext("2d");cxt.fillStyle="#FF0000";cxt.beginPath(); //开始路径cxt.arc(70,18,15,0,Math.PI*2,true);cxt.closePath(); //结束路径cxt.fill(); arc(定义一个中心点，半径，起始角度，结束角度，绘图方向布尔值) 上面代码解析：定义了一个圆心坐标是：（70,18）半径是：15 起始位置是：0 PI 沿顺时针（0 PI 0.5 PI 1 PI 1.5 PI）Math.PI * 2 就是整个圆 true:顺方向 false:逆方向 SVGSVG和Canvas都允许在浏览器创建图像，但两者在根本上不同 SVG： 是一种使用 XML描述2D图形的语言，基于XML，意味着SVG DOM中的每个元素都可以用，可以给某个元素添加Js事件处理器，每个绘制的图形都被看做是对象，如果SVG的属性发生编发，浏览器会自动重现图形。 Canvas: 是通过js来描绘2D图形，逐像素渲染，一旦绘制，浏览器就不关注了，如果它的位置有变化，整个场景都要重新绘制，包括任何或许已被图形覆盖的对象。 Canvas与SVG的比较： Canvas: 依赖分辨率 不支持时间处理器 弱文本传染能力 能以.png .jpg格式保存结果图像 最适合图像密集型的游戏，其中的许多对象会被频繁重绘 SVG： 不依赖分辨率 支持时间处理器 最合适带有大型渲染区域的应用程序（谷歌地图） 复杂度高会减慢渲染速度（任何过度使用DOM的应用都会减慢） 不适合游戏应用]]></content>
      <categories>
        <category>html5</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>w3c</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见的行内元素、块级元素与空元素]]></title>
    <url>%2F2017%2F06%2F06%2F%E5%B8%B8%E8%A7%81%E7%9A%84%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E3%80%81%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E4%B8%8E%E7%A9%BA%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[常见的块级元素： div ul li ol dl dd dt h1~h6 p table blockquote 常见的行内元素: a b span img input select strong label em button textarea td 常见的空元素： br hr img input link meta 鲜为人知的空元素： area base col command embed source]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5新增与删除的标签]]></title>
    <url>%2F2017%2F06%2F05%2FHTML5%E6%96%B0%E5%A2%9E%E7%9A%84%E6%A0%87%E7%AD%BE%2F</url>
    <content type="text"><![CDATA[新增标签 结构标签（相当于div使用） header:定义页面的头部 nav:导航条 aside:定义页面内容的侧边栏 article: 定义文章段落 hgroup:定义文件中某块区域的相关信息 &lt;hgroup&gt; &lt;h2&gt;&lt;/h2&gt; &lt;/hgroup&gt; footer:定义页面的尾部 dialog:定义一个对话框 figure:可以用来包裹canvas,video等多媒体标签，定义一组媒体内容和它们的标题 figcaption:定义figure标签内定义媒体的标题 建议： 关于嵌套： header/section/footer/aside/article/footer这几个标签最好不要嵌套在里面 使用层级： 写在外层：header section footer 写在内层：aside /article /figure /hgroup /nav 媒体标签 video： 定义视频 属性：autoplay:是否自动播放 controls:是否展示控制器 css样式可以控制视频外框显示的宽高 里面可以有source标签 audio:定义一个音频 属性：autoplay:不写默认不自动，autoplay=&quot;autoplay&quot; loop:是否重复，也可以设置重复的次数 loop=&apos;-1&apos;无止尽重复 loop=&apos;5&apos; 重复5次 controls:是否显示控制器，默认不显示 里面可以有source标签 source:定义媒体资源 123 &lt;audio&gt; &lt;source src='音频资源' type='audio/转码格式'&gt;&lt;/audio&gt; 新的表单控件 calendar、 date、 time、 email、 url、 search 删除标签 1、可以使用css代替的标签 删除basefont,big,center,font,s,strike,tt,u这些纯表现的元素,html5中提倡把画面展示性功能放在css中统一编辑。。 2、html5不再使用frame 不再用frame,noframes和frameset，这些标签对可用性产生负面影响。HTML5中不支持frame框架，只支持iframe框架，或者用服务器方创建的由多个页面组成的符合页面的形式，删除以上这三个标签。 3、只有个别浏览器支持的标签 bgsound背景音乐，blink文字闪烁，marquee文字滚动,applet 4、其他不常用的标签 ul替代dir pre替代listing code替代xmp ruby替代rb abbr替代acronym 废除isindex使用form与input相结合的方式替代。 废除listing使用pre替代 废除nextid使用guids 废除plaintex使用“text/plian”（无格式正文）MIME类型替代。 三、重新定义的html标签 &lt;b&gt;：代表内联文本，通常是粗体，没有传递表示重要的意思。 &lt;i&gt;：代表内联文本，通常斜体，没有传递表示重要的意思。 &lt;dd&gt;:可以和details与figure一同使用，定义包含文本，djalog也可用 &lt;dt&gt;：可以和details与figure一同使用，汇总细节，dialog也可用 &lt;menu&gt;：重新定义用户界面的菜单，配合commond或者menuitem使用 &lt;small&gt;：表示小字体，例如打印注释或者法律条款 &lt;strong&gt;：表示重要性而不是强调符号 新标签进行布局意义：1.提升语义化特性和网页的质量2.减少了用于css调用的class和id属性3.对搜索引擎更友好 资源链接http://www.ibm.com/developerworks/cn/web/1212_zhouxiang_deepintohtml5/]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见的html标签]]></title>
    <url>%2F2017%2F06%2F05%2F%E5%B8%B8%E8%A7%81%E7%9A%84html%E6%A0%87%E7%AD%BE%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425262728## 常见的标签&lt;html&gt;文本描述网页定义整个html文档 &lt;/html&gt;&lt;body&gt; 定义html文档的主体部分 &lt;/body&gt;&lt;head&gt; &lt;/head&gt;&lt;title&gt; 项目的标题，会显示在浏览器上方 &lt;/title&gt;&lt;link rel="stylesheet" type="text/css" href="theme.css" /&gt; 链接CSS样式&lt;link rel="shortcut icon" href="favicon.ico"/&gt; 链接项目图标&lt;meta name="description" content="描述内容"/&gt;&lt;meta name="keywords" content="关键字"/&gt;&lt;meta name="author" content="作者"/&gt;&lt;meta http-equiv="refresh" content="0";url=""&gt; 经过自定义的时间跳转到url设置的相应地址页面&lt;script src=""&gt;链接脚本文件&lt;/script&gt;&lt;div&gt; 定义区域块 &lt;/div&gt;&lt;span&gt; 定义行内小区域块 &lt;/span&gt;&lt;a href="www.google.com.hk"&gt; 666 &lt;/a&gt; 跳转到指定链接地址&lt;img src="image/open.jpg"/&gt;&lt;button type="button"&gt;点我，我是按钮&lt;button&gt;&lt;ul&gt;&lt;li&gt;我是无序列表&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;我是有序列表&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;标题1，我显示出来默认最大&lt;/h1&gt;&lt;h2&gt;标题2&lt;/h2&gt;~~&lt;h6&gt;标题6&lt;/h6&gt;&lt;form&gt;用于创建HTML表单，里面可以是 input 元素，比如文本字段、复选框、单选框、提交按钮，还可以包含 menus、textarea、fieldset、legend 和 label 元素&lt;/form&gt;&lt;input type="submit" value="提交"/&gt;&lt;input type="text" value="文本"/&gt;。。。 注意！！！&lt;!DOCTYPE&gt; 不是 HTML 标签。它为浏览器提供一项信息（声明），即 HTML 是用什么版本编写的 一般书写格式： 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;拉勾网-最专业的互联网招聘平台_找工作_招聘_人才网_求职&lt;/title&gt; &lt;link rel="stylesheet" href="css/base.css"&gt; &lt;link rel="stylesheet" href="css/mycss.css"&gt; &lt;link rel="shortcut icon" href="images/favicon.ico"&gt; &lt;meta name="keywords" content="互联网招聘,找工作,招聘网,人才网" &gt; &lt;meta name="description" content="拉勾网是最权威的互联网行业招聘网站,提供全国真实的互联网招聘信息,工资不面议当面谈,找工作,招聘网,寻人才就来拉勾网,互联网行业找工作首选拉勾网" &gt; &lt;style&gt;如果上面不调用外部样式的话，这里可以书写样式，一般建议用外部样式&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="lg_header"&gt; &lt;div class="lg_tbar"&gt; &lt;/div&gt; ...&lt;/div&gt;&lt;script&gt;这里写脚本代码，也可以在上面&lt;head&gt;里面链接外部文件&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[越努力，越幸运]]></title>
    <url>%2F2017%2F06%2F02%2F%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[记载点滴~从心开始]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
</search>